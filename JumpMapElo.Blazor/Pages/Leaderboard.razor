@page "/leaderboard"
@using JumpMapElo.Blazor.Models
@using System.Collections.ObjectModel
@using System.Linq
@using JumpMapElo.Blazor.Services

@inject IRatingRepository RatingRepository
@inject MapService MapService

    <h3 style="padding-top: 12px;">Leaderboard</h3>
<div style="display: flex;
                justify-content: center;
                align-items: flex-start;">
    
    @if (_mapRatings == null)
    {
        <i>Loading...</i>
    }
    else if (!_mapRatings.Any())
    {
        <strong>No results found, vote first.</strong>
    }
    else
    {
        <table>
            <thead>
            <tr>
                <td>Soldier Map Name</td>
                <td>Elo Rating</td>
            </tr>
            </thead>
            <tbody>
            @foreach (var mapRating in _mapRatings.Where(x => GetMapClass(x.MapId) == Class.Soldier || GetMapClass(x.MapId) == Class.Both)
                .OrderByDescending(x => x.Elo))
            {
                <tr>
                    <td>@mapRating.MapName</td>
                    <td>@mapRating.Elo</td>
                </tr>
            }
            </tbody>
        </table>

        <table>
            <thead>
            <tr>
                <td>Demoman Map Name</td>
                <td>Elo Rating</td>
            </tr>
            </thead>
            <tbody>
            @foreach (var mapRating in _mapRatings.Where(x => GetMapClass(x.MapId) == Class.Demoman || GetMapClass(x.MapId) == Class.Both)
                .OrderByDescending(x => x.Elo))
            {
                <tr>
                    <td>@mapRating.MapName</td>
                    <td>@mapRating.Elo</td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>
@code {
    private IReadOnlyList<MapRating> _mapRatings;
    private Dictionary<int, Class> _classes;

    protected override async Task OnInitializedAsync()
    {
        _classes = await MapService.GetMapClassesAsync();
        _mapRatings = await RatingRepository.GetAll();
    }

    private Class GetMapClass(int mapId) => _classes[mapId];

}