@page "/leaderboard"
@using JumpMapElo.Blazor.Models
@using System.Collections.ObjectModel
@using System.Linq
@using JumpMapElo.Blazor.Services

@inject IRatingRepository RatingRepository
@inject MapService MapService

<div style="margin-left: auto;
              margin-right: auto;
display: block; padding: 16px;">
    <h3>Leaderboard</h3>
    @if (_mapRatings == null)
{
    <i>Loading...</i>
}
else if (!_mapRatings.Any())
{
    <strong>No results found, vote first.</strong>
}
else
{
    <table>
        <thead>
        <tr>
            <td>Soldier Map Name</td>
            <td>Elo Rating</td>
        </tr>
        </thead>
        <tbody>
        @foreach (var mapRating in _mapRatings.Where(x => MapService.GetMapClass(x.MapId) == Class.Soldier || MapService.GetMapClass(x.MapId) == Class.Both).OrderByDescending(x => x.Elo))
        {
            <tr>
                <td>@mapRating.MapName</td>
                <td>@mapRating.Elo</td>
            </tr>
        }
        </tbody>
    </table>
    
    <table>
        <thead>
        <tr>
            <td>Demoman Map Name</td>
            <td>Elo Rating</td>
        </tr>
        </thead>
        <tbody>
        @foreach (var mapRating in _mapRatings.Where(x => MapService.GetMapClass(x.MapId) == Class.Demoman || MapService.GetMapClass(x.MapId) == Class.Both).OrderByDescending(x => x.Elo))
        {
            <tr>
                <td>@mapRating.MapName</td>
                <td>@mapRating.Elo</td>
            </tr>
        }
        </tbody>
    </table>
}
</div>
@code {
    private IReadOnlyList<MapRating> _mapRatings;

    protected override async Task OnInitializedAsync()
    {
        _mapRatings = await RatingRepository.GetAll();
    }

}