@page "/"
@page "/{Class}"
@using JumpMapElo.Blazor.Services
@using JumpMapElo.Blazor.Models

@inject MapService MapService
@inject MapRaterService MapRaterService
<div style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; flex-direction: column;">
@if (_errored)
{
    <strong>An error has occurred, try refreshing the page</strong>
}
else if (_firstMap != null &&
         _secondMap != null)
{
    <div class="rate-header" style="">
        Pick your favourite @Class.ToLower() map!

    </div>
    <div style="display: flex; width: 100%; justify-content: center; align-items: center; flex-direction: row;
                    -webkit-animation: fadein 2s; /* Safari, Chrome and Opera > 12.1 */
                       -moz-animation: fadein 2s; /* Firefox < 16 */
                        -ms-animation: fadein 2s; /* Internet Explorer */
                         -o-animation: fadein 2s; /* Opera < 12.1 */
                            animation: fadein 2s;">
        <a @onclick="ChoseFirstMapAsync">
            @_firstMap.Name
        </a>
        <a @onclick="ChoseSecondMapAsync">
            @_secondMap.Name
        </a>
    </div>
}
else
{
    <i>Loading...</i>
}
</div>

@code
{
    private Map _firstMap;
    private Map _secondMap;

    private bool _errored;

    [Parameter]
    public string Class { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(Class))
        {
            Class = "Soldier";
        }
        
        (_firstMap, _secondMap) = await MapService.GetTwoRandomMapsAsync((Class)Enum.Parse(typeof(Class), Class));
    }

    private async Task VoteForMapAsync(Map winning, Map losing)
    {
        _firstMap = null;
        _secondMap = null;
        await MapRaterService.VoteMapAsync(winning, losing);
        await OnParametersSetAsync();
    }

    private async Task ChoseFirstMapAsync() => await VoteForMapAsync(_firstMap, _secondMap);

    private async Task ChoseSecondMapAsync() => await VoteForMapAsync(_secondMap, _firstMap);
}
